//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.OnlineForms.Types;
using CMS.OnlineForms;

[assembly: RegisterBizForm(DancingGoatMvcCoffeeSampleListItem.CLASS_NAME, typeof(DancingGoatMvcCoffeeSampleListItem))]

namespace CMS.OnlineForms.Types
{
	/// <summary>
	/// Represents a content item of type DancingGoatMvcCoffeeSampleListItem.
	/// </summary>
	public partial class DancingGoatMvcCoffeeSampleListItem : BizFormItem
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "BizForm.DancingGoatMvcCoffeeSampleList";


		/// <summary>
		/// The instance of the class that provides extended API for working with DancingGoatMvcCoffeeSampleListItem fields.
		/// </summary>
		private readonly DancingGoatMvcCoffeeSampleListItemFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// First name.
		/// </summary>
		[DatabaseField]
		public string FirstName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FirstName"), @"");
			}
			set
			{
				SetValue("FirstName", value);
			}
		}


		/// <summary>
		/// Last name.
		/// </summary>
		[DatabaseField]
		public string LastName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LastName"), @"");
			}
			set
			{
				SetValue("LastName", value);
			}
		}


		/// <summary>
		/// Email.
		/// </summary>
		[DatabaseField]
		public string Email
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Email"), @"");
			}
			set
			{
				SetValue("Email", value);
			}
		}


		/// <summary>
		/// Address.
		/// </summary>
		[DatabaseField]
		public string Address
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Address"), @"");
			}
			set
			{
				SetValue("Address", value);
			}
		}


		/// <summary>
		/// City.
		/// </summary>
		[DatabaseField]
		public string City
		{
			get
			{
				return ValidationHelper.GetString(GetValue("City"), @"");
			}
			set
			{
				SetValue("City", value);
			}
		}


		/// <summary>
		/// ZIP code.
		/// </summary>
		[DatabaseField]
		public string ZIPCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ZIPCode"), @"");
			}
			set
			{
				SetValue("ZIPCode", value);
			}
		}


		/// <summary>
		/// State.
		/// </summary>
		[DatabaseField]
		public string State
		{
			get
			{
				return ValidationHelper.GetString(GetValue("State"), @"");
			}
			set
			{
				SetValue("State", value);
			}
		}


		/// <summary>
		/// Country.
		/// </summary>
		[DatabaseField]
		public string Country
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Country"), @"");
			}
			set
			{
				SetValue("Country", value);
			}
		}


		/// <summary>
		/// Processed.
		/// </summary>
		[DatabaseField]
		public bool Processed
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Processed"), false);
			}
			set
			{
				SetValue("Processed", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with DancingGoatMvcCoffeeSampleListItem fields.
		/// </summary>
		[RegisterProperty]
		public DancingGoatMvcCoffeeSampleListItemFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with DancingGoatMvcCoffeeSampleListItem fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class DancingGoatMvcCoffeeSampleListItemFields : AbstractHierarchicalObject<DancingGoatMvcCoffeeSampleListItemFields>
		{
			/// <summary>
			/// The content item of type DancingGoatMvcCoffeeSampleListItem that is a target of the extended API.
			/// </summary>
			private readonly DancingGoatMvcCoffeeSampleListItem mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="DancingGoatMvcCoffeeSampleListItemFields" /> class with the specified content item of type DancingGoatMvcCoffeeSampleListItem.
			/// </summary>
			/// <param name="instance">The content item of type DancingGoatMvcCoffeeSampleListItem that is a target of the extended API.</param>
			public DancingGoatMvcCoffeeSampleListItemFields(DancingGoatMvcCoffeeSampleListItem instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// First name.
			/// </summary>
			public string FirstName
			{
				get
				{
					return mInstance.FirstName;
				}
				set
				{
					mInstance.FirstName = value;
				}
			}


			/// <summary>
			/// Last name.
			/// </summary>
			public string LastName
			{
				get
				{
					return mInstance.LastName;
				}
				set
				{
					mInstance.LastName = value;
				}
			}


			/// <summary>
			/// Email.
			/// </summary>
			public string Email
			{
				get
				{
					return mInstance.Email;
				}
				set
				{
					mInstance.Email = value;
				}
			}


			/// <summary>
			/// Address.
			/// </summary>
			public string Address
			{
				get
				{
					return mInstance.Address;
				}
				set
				{
					mInstance.Address = value;
				}
			}


			/// <summary>
			/// City.
			/// </summary>
			public string City
			{
				get
				{
					return mInstance.City;
				}
				set
				{
					mInstance.City = value;
				}
			}


			/// <summary>
			/// ZIP code.
			/// </summary>
			public string ZIPCode
			{
				get
				{
					return mInstance.ZIPCode;
				}
				set
				{
					mInstance.ZIPCode = value;
				}
			}


			/// <summary>
			/// State.
			/// </summary>
			public string State
			{
				get
				{
					return mInstance.State;
				}
				set
				{
					mInstance.State = value;
				}
			}


			/// <summary>
			/// Country.
			/// </summary>
			public string Country
			{
				get
				{
					return mInstance.Country;
				}
				set
				{
					mInstance.Country = value;
				}
			}


			/// <summary>
			/// Processed.
			/// </summary>
			public bool Processed
			{
				get
				{
					return mInstance.Processed;
				}
				set
				{
					mInstance.Processed = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="DancingGoatMvcCoffeeSampleListItem" /> class.
		/// </summary>
		public DancingGoatMvcCoffeeSampleListItem() : base(CLASS_NAME)
		{
			mFields = new DancingGoatMvcCoffeeSampleListItemFields(this);
		}

		#endregion
	}
}